# conda build & deploy config file
package:
  name: datafs
  version: "0.6.6"

source:
  git_rev: 2.2.2
  git_url: https://github.com/postgis/postgis.git

#  patches:
   # List any patch files here
   # - fix.patch

build:
  # noarch_python: True
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - datafs = datafs:main
    #
    # Would create an entry point called datafs that calls datafs.main()

    - datafs=datafs.datafs:cli

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - click >=6.0
    - pyyaml >=3.0
    - fs1 >=0.6
    - whoosh >=2.6

  run:
    - python
    - setuptools
    - click >=6.0
    - pyyaml >=3.0
    - fs1 >=0.6
    - whoosh >=2.6

test:
  # Python imports
  imports:
    - datafs
    - datafs.config
    - datafs.core
    - datafs.managers
    - datafs.services
    - datafs.utils

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - datafs --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    - boto3 >=1.2
    - coverage >=4.0
    - flake8 >=3.0
    - moto >=0.4
    - pip >=8.0
    - pymongo >=3.0
    - pytest >=3.0
    - pytest_cov >=2.0
    - sphinx >=1.2
    - sphinx_rtd_theme >=0.1
    - tox >=2.1
    - wheel >=0.28
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/ClimateImpactLab/datafs
  license: MIT License
  summary: "DataFS is an abstraction layer for data storage systems. It manages file versions and metadata using a json-like storage system like AWS's DynamoDB and relies on PyFilesystem to abstract file storage, allowing you to store files locally and on the cloud in a seamless interface."
  license_family: MIT

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
